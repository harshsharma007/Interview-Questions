using System;
using System.Collections.Generic;
using System.Text;

namespace Interview.EDX.Collections
{
    class QueryCollections
    {
        /*
            Query Collections with Predicates and Lambda Expressions
            Some collections in the .NET Framework do not support the use of array notation for accessing items in the collection. These collections provide the Find
            method for locating items in the collection. The Find method requires a predicate to be used as the criteria for its search. In this case, the predicate
            becomes a method that will examine each item in the collection, returning a Boolean value based on the match results. The search ends once an item is found.
            
            Predicates are typically expressed in the form of a lambda expression. Lambda expressions are a C# expression that returns a method. Similar to the methods
            you are familiar with already, a lambda expression contains a list of parameters and a method body, but it does not contain a method name nor does it
            contain a return type. The return type is inferred from the context in which the lambda expression is used.
            
            The following is an example of a lambda expression for querying a collection of Employee objects, the collection is also shown for reference.
            
            List<Employee> employees = new List<Employee>()
            {
                new Employee() { empID = 001, Name = "Tom", Department = "Sales" },
                new Employee() { empID = 024, Name = "Joan", Department = "HR" },
                new Employee() { empID = 023, Name = "Fred", Department = "Accouting" },
                new Employee() { empID = 040, Name = "Mike", Department = "Sales" }
            }
            
            // Find the member of the list that has an employee id of 023
            Employee match = employees.Find((Employee p) => { return p.empID == 023; });
            Console.WriteLine("empID: {0}\nName: {1}\nDepartment: {2}", match.empID, match.Name, match.Department);
            
            Here is the output generated by this code:
            empID: 023
            Name: Fred
            Department: Accounting
            
            The lambda expression in the above code is (Employee p) => { return p.empID == 023; }
        */
    }
}
